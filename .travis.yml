branches:
  only:
  - "/.*/"
notifications:
  email:
    recipients:
    - pmontgom@broadinstitute.org
language: python
python:
- '3.6'
before_install:
- openssl aes-256-cbc -k "$super_secret_password" -in travis/travis-docker-push-account.json.enc
  -out travis/travis-docker-push-account.json -d
install:
- sh write_version.sh
- wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
- bash miniconda.sh -b -p $HOME/miniconda
- export PATH="$HOME/miniconda/bin:$PATH"
- hash -r
- conda config --set always_yes yes --set changeps1 no
- conda update -q conda
- conda info -a
- conda create -q -n test-environment -c bioconda python=$TRAVIS_PYTHON_VERSION bioconductor-rhdf5
  numpy=1.11.3
- source activate test-environment
- pip install -U pip setuptools
- python setup.py install
- pip install -r requirements.txt
services:
- docker
script:
- pytest
after_success:
- if [ "$TRAVIS_BRANCH" == "master" ]; then bash ./build_docker.sh; chmod ugo+x travis/push_docker.sh;
  travis/push_docker.sh; fi
env:
  global:
  - secure: zthKDZq3g/kdnzCYcMq6E+nJsvR6q+v646UPE8wA3hVQSl0QLV1CgffocynkEthnruO40Dq2WhYgq6wWSdzFMl8Qxcg7/GzWEu35Rb9hzXxZHhyJsmBIBU/qSHaLVVRYcKJ4RYdH2mU/fd8ODgPG+dHeAtFSmko72FFsg1o2hT4/pBmWtFMUR/ryWrO/JPxr3gxIhkjdqOaVs32ZdddhDVEUoBay6xYSOxRPQVoMrInIm0emZ+uPDvAzT91cgEpyGcWzr83yP2JPsxwzeWXkPGwmexa35o+jvrTczq0gklnh1h4l6FqFp8saGGpaWDMmNcoyqJ70vKtUuJyPIB852sAt7h1TQuy0W5jGElDqS/Zg9l0+9LLg017dae3NVa0CT5JOzqD2pO1VAGkOjKIEzXyBxHJiPeZm5/4nrlPzg3nia/xTSPC7J2ldC2CIMgWaoAo0RmqBiT8RRW9nWbRlPM2CssR5dMw1aLT1AQT3aok44GDPyj4ZsWFfqKKwT0/w3AGbWou6pV3cAjwj7m9G7E4yl/S0G7tN7LZZKBLC+uSUfrsc2xehnrpZeDNfkQ8GJsuXFqYHIvQew80ZEYICjnb9vpXK9N5BciMEHER3Z5G4T5L593sgjUyoNggsNKQ3KB2KDmXqhi7Ecqqdvdsu4FHY/lvCKfzS+yggdmk4lIk=
  - secure: HCnQq/MWcfKFRJMijbQ4txDx1FmBrWkiUVdZEZW9Q2zmUPEwRa0MNiQpCVTJwgHFFe0oUrkydW6uQTEq7PkZC9bH3F9dSvz8n6f59RHmBc03KXIBlNqW3TaSWGnxSnXDf/KBD/lEg7NeA+Un9Vazdw8ElPZ/n9RNZ5O892WSywIHlG5HgFW8yEO57BX0+yI4UX0lCZV+x1IjhVGGyrS8U42gpegbP0tzeAg7ETAOTXBE7gxVfNwwyEkV5FC3pJ1rv1XUYm/nKbmRj/yuZpcUCOzQm7IfFmd6T4oDDI5QlPQW0OABc90K0JCQRx2bEvwaoawrXY76Mo0eV2X7F2r2JhNmVsDfjJFPGo6JQWyLhwzCEWl2vT5LIcDpDr6tvQExPWO3eOW6bMaUwEsJRxHFbfRRhVdKNBXGhfQT7S5h0pjg/5L/fPJlGSGZMbYS4PrxaLv6ECxLCNUKobd5KtsW6J1w2oNnTpV5ss6gwRr8JOOhq37JCjxOQitZ6ieLPJEM/vSagQD477efoiCjaBegcV6MZdLgVDMZCr/owNskDxO6Ht/u/AjKnczfD3ileIjltdpp6vbWQB9sxfZ5W1ofva7tHvSKegBCxwK52bHhmpQKM+D6yC3BCvnDKdvhSRVRJBI8Gak/+ZLoceqJpBybELYPfJQ5E59n9ovuDCHp8do=
