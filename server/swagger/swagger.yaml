swagger: '2.0'
info:
  version: 1.0.0
  title: Taiga
basePath: /api
schemes:
  - http
  - https
consumes:
  - application/json
  - text/xml
produces:
  - application/json
  - text/html
paths:
  /folder/{folderId}:
    get:
      x-swagger-router-controller: controllers.default_controller
      operationId: get_folder
      description: Fetch the details and content of a folder by id
      parameters:
        - name: folderId
          in: path
          type: string
          description: Folder ID
          required: true
      responses:
        200:
          description:  Properties of requested folder
          schema:
            title: Folder
            type: object
            required: 
              - id
              - name
              - type
              - parents
              - entries
            properties:
              id: 
                type: string
              name: 
                type: string
              type:
                type: string
                enum:
                  - folder
                  - trash
                  - home
              parents: 
                type: array
                items: 
                  "$ref": "#/definitions/namedid"
              entries:
                type: array
                items: 
                  type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - folder
                        - dataset
                        - datasetVersion
                    id:
                      type: string
                    name:
                      type: string

  /folders/create:
    post:
      x-swagger-router-controller: controllers.default_controller
      operationId: create_folder
      description: Create a new folder
      parameters:
        - in: body
          name: metadata
          schema:
            type: object
            properties:
              name:
                type: string
                description: New folder name
              description:
                type: string
                description: Long description
              parent:
                type: string
                description: Parent folder ID to initially insert this folder under
      responses:
        200:
          description: The id of the newly created folder
          schema:
            type: object
            required: 
              - id
              - name
            properties:
              id: 
                type: string
              name: 
                type: string


  /folders/update:
    post:
      x-swagger-router-controller: controllers.default_controller
      operationId: update_folders
      description: Perform multiple updates to folders within a single transaction.  Can be used for moves (a remove and add somewhere else), copies (and add) and deletes (a remove and add to trash)
      parameters:
        - in: body
          name: operations
          schema:
            type: object
            properties:
              operations:
                type: array
                items:
                  type: object
                  properties:
                    parent: 
                      type: string
                    opType:
                      type: string
                      enum: 
                        - add
                        - remove
                    idType:
                      type: string
                      enum:
                        - folder
                        - dataset
                        - datasetVersion
                    id:
                      type: string
      responses:
        200:
          description: Successful execution of update
        400:
          description: Attempted to do something bad (move trash or home, or modify non-existant entry)

          
  /user:
    get:
      x-swagger-router-controller: controllers.default_controller
      operationId: get_user
      description: Fetch properties about the currently authenticated user
      responses:
        200:
          description: Properties of current user
          schema:
            title: User
            type: object
            required:
              - id
              - name
              - home_folder_id
              - trash_folder_id
            properties:
              id: 
                type: string
              name:
                type: string
              home_folder_id:
                type: string
              trash_folder_id:
                type: string

  /uploadurl:
    get:
      x-swagger-router-controller: controllers.default_controller
      operationId: get_upload_url
      description: Get url used to upload data
      responses:
        200:
          description: Url and id to use to refer to upload location
          schema:
            title: FileUploadInfo
            type: object
            required: 
              - id
              - url
            properties:
              id:
                type: string
              url:
                type: string

  /datasets/create:
    post:
      x-swagger-router-controller: controllers.default_controller
      operationId: create_dataset
      description: Create a dataset from a set of already uploaded objects
      parameters:
        - in: body
          name: dataset
          schema:
            type: object
            properties:
              name:
                type: string
              description:
                type: string
              parent:
                type: string
              entries:
                type: array
                items:
                  "$ref": "#/definitions/DataFileSubmission"
      responses:
        200:
          description: The info about the newly created dataset
          schema:
            "$ref": "#/definitions/ImportStatus"

  /dataset/{datasetId}/update:
    post:
      x-swagger-router-controller: controllers.default_controller
      operationId: update_dataset
      description: Create a new dataset version by updating the data files associated with dataset.
      parameters:
        - name: datasetId
          in: path
          type: string
          description: Folder ID
          required: true
        - in: body
          name: dataset
          schema:
            type: object
            properties:
              old_entries:
                description: The names of data files to remove.
              new_entries:
                description: Data files to add as part of the new version.
                type: array
                items:
                  "$ref": "#/definitions/DataFileSubmission"
      responses:
        200:
          description: The info about the newly created dataset
          schema:
            "$ref": "#/definitions/ImportStatus"



  /dataset/{datasetId}/activity:
    get:
      x-swagger-router-controller: controllers.default_controller
      operationId: get_dataset_activity
      description: Fetch activity history for this dataset
      parameters:
        - name: datasetId
          in: path
          type: string
          description: Dataset ID
          required: true
      responses:
        200:
          description: Successfully updated

  /dataset/{datasetId}/name:
    post:
      x-swagger-router-controller: controllers.default_controller
      operationId: update_dataset_name
      description: Update dataset name
      parameters:
        - name: datasetId
          in: path
          type: string
          description: Dataset ID
          required: true
      responses:
        200:
          description: Successfully updated

  /dataset/{datasetId}/description:
    post:
      x-swagger-router-controller: controllers.default_controller
      operationId: update_dataset_description
      description: Update dataset name
      parameters:
        - name: datasetId
          in: path
          type: string
          description: Dataset ID
          required: true
      responses:
        200:
          description: Successfully updated

  /datasetVersion/{datasetVersionId}:
    get:
      x-swagger-router-controller: controllers.default_controller
      operationId: get_dataset_version
      description: Fetch the contents of a version of specific dataset
      parameters:
        - name: datasetVersionId
          in: path
          type: string
          description: Dataset Version ID
          required: true
      responses:
        200:
          description: Status of import, and any error which may have occurred
          schema:
            "$ref": "#/definitions/ImportStatus"
            
  /datasetVersion/{datasetVersionId}/status:
    get:
      x-swagger-router-controller: controllers.default_controller
      operationId: get_dataset_version_status
      description: Fetch the status of a dataset being imported
      parameters:
        - name: datasetVersionId
          in: path
          type: string
          description: Dataset Version ID
          required: true
      responses:
        200:
          description: Status of import, and any error which may have occurred
          schema:
            "$ref": "#/definitions/ImportStatus"

  /datafile:
    get:
      x-swagger-router-controller: controllers.default_controller
      operationId: get_datafile
      # do we need to support conversion?
      description: Get datafile contents
      parameters:
        - name: name
          in: query
          type: string
          description: dataset_id or dataset_version_id with optional version number and filename
          required: true
      responses:
        200:
          description: Successfully updated

  /provenance:
    delete:
      description: Remove a batch of provenance entries
      # parameters: provenance batch id from the POST.  Doesn't allow for small corrections.
      # What is the UI going to allow?
      responses:
        200:
          description: OK
    
    get:
      description: Query provenance 
      #parameters:
      # query by dataset or datafile, give max depth in ancestors and decendants
      responses:
        200:
          description: Successful registrating of provenance
          schema:
            type: object
            properties:
              provenance:
                type: array
                items:
                  "$ref": "#/definitions/ProvenanceStmt"
    post:
      description: Register the provenance of one or more datasets.   Done in a batch to allow for easily deleting a bulk update and resubmitting if a mistake was made.
        # is batch uploads really a good idea?  The name of the batch is never used/seen anywhere presently.
      parameters:
        - in: body
          name: modifications
          schema:
            type: object
            properties:
              name:
                type: string
              provenance:
                type: array
                items:
                  "$ref": "#/definitions/ProvenanceStmt"
      responses:
        200:
          description: Successful registrating of provenance
          schema:
            type: object
            properties:
              id: 
                type: string

#missing provenance

definitions:
  DataFileSubmission:
    type: object
    properties:
      name:
        type: string
      type:
        type: string
      description:
        type: string
      id:
        type: string
        description: The object ID returned from the /uploadurl request
  
  ImportStatus:
    type: object
    required:
      - dataset_version_id
      - status
      - message
    properties:
      dataset_version_id:
        type: string
        description: The id of the datasetVersion that is being created.  Additionally, this id can be used in polling when a dataset import is not yet complete.
      status:
        description: 'One of "pending", "running", "completed" or "failed".  If completed, there will exist a new datasetVersion with id specified in this response.  Failures should have the reason included in the status message.'
        type: string
        enum:
          - pending
          - running
          - complete
          - failed
      message:
        description: Human readable summary of the progress of the import
        type: string

  namedid:
    type: object
    properties:
      name:
        type: string
      id:
        type: string

  ProvenanceStmt:
    type: object
    properties:
      inputs: 
        type: array
        items:
          type: object
          properties:
            label: 
              description: A short label describing how the file was used.   Should be thought of as a parameter name for the method.
              type: string
            url:
              description: Can specify an external reference for any files which are not registered within the system.  Either url or fileId should be populated, but not both.
              type: string
            fileId:
              description: a file id that was used as input to the method
              type: string
      outputs:
        type: array
        items:
          type: object
          properties:
            dataset_id:
              description: The dataset(s) that were derived from the input files
              type: string
      method:
        type: object
        properties:
          name:
            description: Short name describing the process that was executed
            type: string
          description:
            description: Long form description of the process that was executed
            type: string
          properties:
            description: Any parameters other than input files that should be recorded
            type: object
  