swagger: '2.0'
info:
  version: 1.0.0
  title: Taiga
#basePath: /api
schemes:
  - http
  - https
consumes:
  - application/json
  - text/xml
produces:
  - application/json
  - text/html
paths:
  /folder/{folder_id}:
    get:
      x-swagger-router-controller: taiga2.controllers.endpoint
      operationId: get_folder
      description: Fetch the details and content of a folder by id
      parameters:
        - name: folder_id
          in: path
          type: string
          description: Folder ID
          required: true
      responses:
        200:
          description:  Properties of requested folder
          schema:
            title: Folder
            type: object
            required:
              - id
              - name
              - type
              - parents
              - entries
              - creation_date
              - creator
            properties:
              id:
                type: string
              name:
                type: string
              type:
                type: string
                enum:
                  - folder
                  - trash
                  - home
              parents:
                type: array
                items:
                  "$ref": "#/definitions/NamedId"
              creation_date:
                type: string
              creator:
                "$ref": "#/definitions/NamedId"
              description:
                type: string
              entries:
                type: array
                items:
                  type: object
                  required:
                    - type
                    - id
                    - name
                    - creation_date
                    - creator
                  properties:
                    type:
                      type: string
                      enum:
                        - folder
                        - dataset
                        - dataset_version
                    id:
                      type: string
                    # populated for dataset and datasetVersion.  Useful to know what the latest version of a dataset is.
                    dataset_version_id:
                      type: string
                    name:
                      type: string
                    creation_date:
                      type: string
                    creator:
                      "$ref": "#/definitions/NamedId"
              acl:
                "$ref": "#/definitions/Acl"

  /folder/create:
    post:
      x-swagger-router-controller: taiga2.controllers.endpoint
      operationId: create_folder
      description: Create a new folder
      consumes:
        - application/json
      parameters:
        - in: body
          name: metadata
          schema:
            type: object
            required:
              - name
              - parentId
              - creatorId
            properties:
              name:
                type: string
                description: New folder name
              description:
                type: string
                description: Long description
              parentId:
                type: string
                description: Parent folder ID to initially insert this folder under
              creatorId:
                type: string
                description: User Id who initialized the creation of the folder
      responses:
        200:
          description: The id of the newly created folder
          schema:
            title: CreateFolderResponse
            type: object
            required:
              - id
              - name
            properties:
              id:
                type: string
              name:
                type: string

  /folder/{folderId}/name:
    post:
      x-swagger-router-controller: taiga2.controllers.endpoint
      operationId: update_folder_name
      description: Update the name of the folder folderId
      consumes:
        - application/json
      parameters:
        - name: folderId
          in: path
          type: string
          description: Folder ID
          required: true
        - name: NameUpdate
          in: body
          schema:
            type: object
            required:
              - name
            properties:
              name:
                type: string
      responses:
        200:
          description: Folder name updated

  /folder/{folderId}/description:
    post:
      x-swagger-router-controller: taiga2.controllers.endpoint
      operationId: update_folder_description
      description: Update the description of the folderId
      consumes:
        - application/json
      parameters:
        - in: path
          name: folderId
          type: string
          description: Folder ID
          required: true
        - in: body
          name: DescriptionUpdate
          description: Description content to update in the folder folderId
          required: true
          schema:
            type: object
            required:
              - description
            properties:
              description:
                type: string
      responses:
        200:
          description: Folder description updated


  /user:
    get:
      x-swagger-router-controller: taiga2.controllers.endpoint
      operationId: get_user
      description: Fetch properties about the currently authenticated user
      responses:
        200:
          description: Properties of current user
          schema:
            title: User
            type: object
            required:
              - id
              - name
              - home_folder_id
              - trash_folder_id
              - token
            properties:
              id:
                type: string
              name:
                type: string
              home_folder_id:
                type: string
              trash_folder_id:
                type: string
              token:
                type: string

  /credentials_s3:
    get:
      x-swagger-router-controller: taiga2.controllers.endpoint
      operationId: get_s3_credentials
      description: Get temporary credentials to access to S3
      responses:
        200:
          description: Temporary credentials to access to S3
          schema:
            title: Credentials
            type: object
            required:
              - accessKeyId
              - expiration
              - secretAccessKey
              - sessionToken
              - bucket
              - prefix
            properties:
              accessKeyId:
                type: string
              expiration:
                type: string
                format: date-time
              secretAccessKey:
                type: string
              sessionToken:
                type: string
              bucket:
                type: string
              prefix:
                type: string

  /upload_session:
    get:
      x-swagger-router-controller: taiga2.controllers.endpoint
      operationId: create_new_upload_session
      description: Ask for the creation of a new Upload Session to post new files in a dataset

      responses:
        200:
          description: The unique Upload Session Id
          schema:
            title: UploadSessionId
            required:
              - sid
            properties:
              sid:
                type: string

  /dataset:
    post:
      x-swagger-router-controller: taiga2.controllers.endpoint
      operationId: create_dataset
      description: Create a dataset from a set of already uploaded objects
      consumes:
        - application/json
      parameters:
        - in: body
          name: sessionDatasetInfo
          required: true
          schema:
            type: object
            required:
              - sessionId
              - datasetName
              - datasetDescription
              - currentFolderId
            properties:
              sessionId:
                type: string
              datasetName:
                type: string
              datasetDescription:
                type: string
              currentFolderId:
                type: string
      responses:
        200:
          description: The info about the newly created dataset
          schema:
            title: DatasetId
            type: string

  /dataset/{datasetId}:
    get:
      x-swagger-router-controller: taiga2.controllers.endpoint
      operationId: get_dataset
      description: Fetch the details of a dataset
      parameters:
        - name: datasetId
          in: path
          type: string
          description: Dataset ID
          required: true
      responses:
        200:
          description: The data specific to a specific dataset
          schema:
            title: Dataset
            type: object
            required:
              - id
              - name
              - description
              - permanames
              - versions
            properties:
              id:
                type: string
              name:
                type: string
              permanames:
                type: array
                items:
                  type: string
              description:
                type: string
              versions:
                type: array
                items:
                  title: DatasetVersionSummary
                  type: object
                  required:
                    - name
                    - id
                    - status
                  properties:
                    name:
                      type: string
                    id:
                      type: string
                    status:
                      "$ref": "#/definitions/StatusEnum"
              acl:
                "$ref": "#/definitions/Acl"

  /dataset/{datasetId}/{datasetVersionId}:
    get:
      x-swagger-router-controller: taiga2.controllers.endpoint
      operationId: get_dataset_version_from_dataset
      description: Fetch the details of a dataset version
      parameters:
        - name: datasetId
          in: path
          type: string
          description: Dataset Id
          required: true
        - name: datasetVersionId
          in: path
          type: string
          description: Dataset Version Id
          required: true
      responses:
        200:
          description: The data specific to a specific dataset
          schema:
            title: Dataset
            type: object
            required:
              - dataset
              - datasetVersion
            properties:
              dataset:
                "$ref": "#/definitions/Dataset"
              datasetVersion:
                "$ref": "#/definitions/DatasetVersion"

  /dataset/{dataset_id}/first:
    get:
      x-swagger-router-controller: taiga2.controllers.endpoint
      operationId: get_dataset_first
      description: Fetch the first (dataset_)version of a dataset
      parameters:
        - name: dataset_id
          in: path
          type: string
          description: Dataset ID
          required: true
      responses:
        200:
          description: The data specific to a specific dataset version
          schema:
            title: DatasetVersion
            type: object
            required:
              - id
              - dataset_id
              - name
              - creation_date
              - creator
              - datafiles
              - version
            properties:
              id:
                type: string
              dataset_id:
                type: string
              status:
                "$ref": "#/definitions/StatusEnum"
              name:
                type: string
              version:
                type: string
              description:
                type: string
              creation_date:
                type: string
              creator:
                "$ref": "#/definitions/NamedId"
              datafiles:
                type: array
                items:
                  title: DataFile
                  type: object
                  required:
                    - name
                    - url
                    - mime_type
                    - description
                    - content_summary
                  properties:
                    name:
                      type: string
                    url:
                      type: string
                    mime_type:
                      type: string
                    description:
                      type: string
                    content_summary:
                      description: "A textual description of the size.  (ie: '200 x 30 table')  Should be relatively short and summarize the shape/size of the contents."
                      type: string
              provenance:
                "$ref": "#/definitions/Provenance"

  /dataset/{datasetId}/name:
    post:
      x-swagger-router-controller: taiga2.controllers.endpoint
      operationId: update_dataset_name
      description: Update dataset name
      consumes:
        - application/json
      parameters:
        - name: datasetId
          in: path
          type: string
          description: Dataset ID
          required: true
        - in: body
          name: NameUpdate
          schema:
            type: object
            required:
              - name
            properties:
              name:
                type: string
      responses:
        200:
          description: Successfully updated

  /dataset/{datasetId}/description:
    post:
      x-swagger-router-controller: taiga2.controllers.endpoint
      operationId: update_dataset_description
      description: Update dataset description
      consumes:
        - application/json
      parameters:
        - name: datasetId
          in: path
          type: string
          description: Dataset ID
          required: true
        - in: body
          name: DescriptionUpdate
          schema:
            type: object
            required:
              - description
            properties:
              description:
                type: string
      responses:
        200:
          description: Successfully updated

  /datasetVersion/{datasetVersion_id}:
    get:
      x-swagger-router-controller: taiga2.controllers.endpoint
      operationId: get_dataset_version
      description: Fetch the contents of a version of specific dataset
      parameters:
        - name: datasetVersion_id
          in: path
          type: string
          description: Dataset Version ID
          required: true
      responses:
        200:
          description: The data specific to a specific dataset version
          schema:
            title: DatasetVersion
            type: object
            required:
              - id
              - dataset_id
              - name
              - creation_date
              - creator
              - datafiles
              - version
              - folders
            properties:
              id:
                type: string
              folders:
                type: array
                items:
                  "$ref": "#/definitions/NamedId"
              dataset_id:
                type: string
              status:
                "$ref": "#/definitions/StatusEnum"
              name:
                type: string
              version:
                type: string
              description:
                type: string
              creation_date:
                type: string
              creator:
                "$ref": "#/definitions/NamedId"
              datafiles:
                type: array
                items:
                  title: DataFile
                  type: object
                  required:
                    - name
                    - url
                    - mime_type
                    - description
                    - content_summary
                  properties:
                    name:
                      type: string
                    url:
                      type: string
                    mime_type:
                      type: string
                    description:
                      type: string
                    content_summary:
                      description: "A textual description of the size.  (ie: '200 x 30 table')  Should be relatively short and summarize the shape/size of the contents."
                      type: string
              provenance:
                "$ref": "#/definitions/Provenance"

  /datafile/{sid}:
    post:
      x-swagger-router-controller: taiga2.controllers.endpoint
      operationId: create_upload_session_file
      description: Process a freshly S3 uploaded file (conversion and storage reference)
      consumes:
        - application/json
      parameters:
        - name: sid
          in: path
          type: string
          description: The Upload Session id
          required: true
        - in: body
          name: S3UploadedFileMetadata
          required: true
          schema:
            "$ref": "#/definitions/S3UploadedFileMetadata"
      responses:
        200:
          description: Received data, they are correct and conversion currently doing
          schema:
            title: TaskId
            type: string

  /datafile:
    get:
      x-swagger-router-controller: taiga2.controllers.endpoint
      operationId: get_datafile
      description: Get datafile contents
      parameters:
        - name: dataset_permaname
          in: query
          type: string
          description: "The permaname of the dataset (Either permaname or dataset_version_id must be supplied)"
        - name: version
          in: query
          type: string
          description: "The version number of the dataset (only valid when permaname is supplied)"
        - name: dataset_version_id
          in: query
          type: string
          description: "dataset version id to look up.  (Either permaname or dataset_version_id must be supplied)"
        - name: datafile_name
          in: query
          type: string
          description: "datafile name (optional if there is only one datafile associated with the dataset)"
        - name: format
          in: query
          type: string
          description: the format to retreive as
        - name: force
          in: query
          type: string
          description: "if set to 'Y' will kick off this conversion even if on already has been done/started"
      responses:
        200:
          description: Will kick off conversion if not data in that form is not already availible.  Once reformated data is available, the location(s) will be returned in urls.  Multiple urls are returned because the data may need to be stored in seperate chunks, depending on format.
          schema:
            title: Datafileurl
            type: object
            required:
              - dataset_name
              - dataset_version
              - dataset_id
              - dataset_version_id
              - datafile_name
              - status
            properties:
              dataset_permaname:
                type: string
              dataset_name:
                type: string
              dataset_version:
                type: string
              dataset_id:
                type: string
              dataset_version_id:
                type: string
              datafile_name:
                type: string
              urls:
                type: array
                items:
                  type: string
              status:
                type: string
        400:
          description: Malformed request
        500:
          description: Error encountered during conversion.


  /task_status/{taskStatusId}:
    get:
      x-swagger-router-controller: taiga2.controllers.endpoint
      operationId: task_status
      description: Get the status of a Celery task
      parameters:
        - name: taskStatusId
          in: path
          type: string
          description: Celery task status id
          required: true
      responses:
        200:
          description: Status of the task
          schema:
            title: CeleryTaskStatus
            type: object
            required:
              - id
              - state
              - message
              - current
              - total
              - s3Key
            properties:
              id:
                type: string
              state:
                type: string
              message:
                type: string
              current:
                type: string
              total:
                type: string
              s3Key:
                type: string

  /trash:
    post:
      x-swagger-router-controller: taiga2.controllers.endpoint
      operationId: move_to_trash
      description: Move the entries passed as parameter into the user's trash folder
      consumes:
        - application/json
      parameters:
        - name: entryIds
          in: body
          schema:
            type: array
            items:
              title: entryId
              type: string
          required: true
          description: "Ids of the entries to mnove to the user trash folder"
      responses:
        200:
          description: Successfully updated

#missing provenance

definitions:
  Dataset:
    type: object
    required:
      - id
      - name
      - description
      - permanames
      - versions
      - folders
    properties:
      id:
        type: string
      name:
        type: string
      permanames:
        type: array
        items:
          type: string
      description:
        type: string
      versions:
        type: array
        items:
          title: DatasetVersionSummary
          type: object
          required:
            - name
            - id
            - status
          properties:
            name:
              type: string
            id:
              type: string
            status:
              "$ref": "#/definitions/StatusEnum"
      folders:
        type: array
        items:
          "$ref": "#/definitions/NamedId"
      acl:
        "$ref": "#/definitions/Acl"

  DatasetVersion:
    type: object
    required:
      - id
      - dataset_id
      - name
      - creation_date
      - creator
      - datafiles
      - version
      - folders
    properties:
      id:
        type: string
      folders:
        type: array
        items:
          "$ref": "#/definitions/NamedId"
      dataset_id:
          type: string
      status:
        "$ref": "#/definitions/StatusEnum"
      name:
        type: string
      version:
        type: string
      description:
        type: string
      creation_date:
        type: string
      creator:
        "$ref": "#/definitions/NamedId"
      datafiles:
        type: array
        items:
          title: DataFile
          type: object
          required:
            - name
            - url
            - mime_type
            - description
            - content_summary
          properties:
            name:
              type: string
            url:
              type: string
            mime_type:
              type: string
            description:
              type: string
            content_summary:
              description: "A textual description of the size.  (ie: '200 x 30 table')  Should be relatively short and summarize the shape/size of the contents."
              type: string
      provenance:
        "$ref": "#/definitions/Provenance"

  Provenance:
    type: object
    properties:
      method:
        type: object
        properties:
          description:
            type: string
          parameters:
            type: object
      inputs:
        type: array
        items:
          type: object
          required:
            - dataset_version_id
            - name
          properties:
            method_parameter:
              type: string
              description: An optional parameter for specifying which parameter this was used as for the given method.
            dataset_version_id:
              type: string
            name:
              type: string
              description: The name of the datafile within the dataset_version

  DataFileSubmission:
    type: object
    required:
      - name
      - id
    properties:
      name:
        type: string
      mime_type:
        type: string
      description:
        type: string
      id:
        type: string
        description: The object ID returned from the /uploadurl request

  ImportStatus:
    type: object
    required:
      - dataset_version_id
      - status
      - message
    properties:
      dataset_version_id:
        type: string
        description: The id of the datasetVersion that is being created.  Additionally, this id can be used in polling when a dataset import is not yet complete.
      status:
        description: 'One of "pending", "running", "completed" or "failed".  If completed, there will exist a new datasetVersion with id specified in this response.  Failures should have the reason included in the status message.'
        type: string
        enum:
          - pending
          - running
          - complete
          - failed
      message:
        description: Human readable summary of the progress of the import
        type: string

  Acl:
    type: object
    properties:
      default_permissions:
        type: string
        enum:
          - none
          - read
          - read-write
          - owner
      grants:
        type: array
        items:
          type: object
          properties:
            type:
              type: string
              enum:
                - group
                - user
            id:
              type: string
              description: The id of either the group or the user depending on the value of type
            name:
              type: string
            permission:
              type: string
              enum:
                - read
                - read-write
                - owner

  NamedId:
    type: object
    properties:
      name:
        type: string
      id:
        type: string

  StatusEnum:
    type: string
    enum:
      - deprecated # Discourage use.  Warn when fetching
      - deleted    # Underlying data has been deleted
      - valid

  # Match the S3 Data object returned by ManagedUpload
  # https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/S3/ManagedUpload.html#constructor-property
  S3UploadedFileMetadata:
    type: object
    required:
      - location
      - eTag
      - bucket
      - key
      - filename
      - filetype
    properties:
      location:
        type: string
      eTag:
        type: string
      bucket:
        type: string
      key:
        type: string
      filename:
        type: string
      filetype:
        type: string
